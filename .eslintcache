[{"C:\\Users\\ketul\\ReactJs\\waveform\\src\\index.tsx":"1","C:\\Users\\ketul\\ReactJs\\waveform\\src\\reportWebVitals.ts":"2","C:\\Users\\ketul\\ReactJs\\waveform\\src\\App.tsx":"3"},{"size":500,"mtime":1608091978914,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1608091978914,"results":"6","hashOfConfig":"5"},{"size":2102,"mtime":1608132762945,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"16qnqcp",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ketul\\ReactJs\\waveform\\src\\index.tsx",[],["15","16"],"C:\\Users\\ketul\\ReactJs\\waveform\\src\\reportWebVitals.ts",[],"C:\\Users\\ketul\\ReactJs\\waveform\\src\\App.tsx",["17","18","19","20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":10,"column":10,"nodeType":"28","messageId":"29","endLine":10,"endColumn":14},{"ruleId":"26","severity":1,"message":"30","line":10,"column":18,"nodeType":"28","messageId":"29","endLine":10,"endColumn":23},{"ruleId":"26","severity":1,"message":"31","line":10,"column":25,"nodeType":"28","messageId":"29","endLine":10,"endColumn":29},{"ruleId":"26","severity":1,"message":"32","line":11,"column":7,"nodeType":"28","messageId":"29","endLine":11,"endColumn":16},{"ruleId":"33","severity":1,"message":"34","line":35,"column":29,"nodeType":"28","endLine":35,"endColumn":34},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'play' is assigned a value but never used.","Identifier","unusedVar","'pause' is assigned a value but never used.","'stop' is assigned a value but never used.","'audioPlay' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'peaksInstance' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]